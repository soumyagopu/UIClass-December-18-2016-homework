Category: Attribute

The CSS specification allows elements to be identified by their attributes. While not supported by some older browsers for the purpose of styling documents, jQuery allows you to employ them regardless of the browser being used.
When using any of the following attribute selectors, you should account for attributes that have multiple, space-separated values. Since these selectors see attribute values as a single string, this selector, for example, $("a[rel='nofollow']"), will select <a href="example.html" rel="nofollow">Some text</a> but not <a href="example.html" rel="nofollow foe">Some text</a>.
Attribute values in selector expressions must follow the rules for W3C CSS selectors; in general, that means anything other than a valid identifier should be surrounded by quotation marks.
•	double quotes inside single quotes: $('a[rel="nofollow self"]')
•	single quotes inside double quotes: $("a[rel='nofollow self']")
•	escaped single quotes inside single quotes: $('a[rel=\'nofollow self\']')
•	escaped double quotes inside double quotes: $("a[rel=\"nofollow self\"]")
The variation you choose is generally a matter of style or convenience.

Attribute Contains Prefix Selector [name|=”value”]
Selects elements that have the specified attribute with a value either equal to a given string or starting with that string followed by a hyphen (-).

Attribute Contains Selector [name*=”value”]
Selects elements that have the specified attribute with a value containing a given substring.

Attribute Contains Word Selector [name~=”value”]
Selects elements that have the specified attribute with a value containing a given word, delimited by spaces.

Attribute Ends With Selector [name$=”value”]
Selects elements that have the specified attribute with a value ending exactly with a given string. The comparison is case sensitive.

Attribute Equals Selector [name=”value”]
Selects elements that have the specified attribute with a value exactly equal to a certain value.
Also in: Selectors > jQuery Extensions

Attribute Not Equal Selector [name!=”value”]
Select elements that either don’t have the specified attribute, or do have the specified attribute but not with a certain value.

Attribute Starts With Selector [name^=”value”]
Selects elements that have the specified attribute with a value beginning exactly with a given string.

Has Attribute Selector [name]
Selects elements that have the specified attribute, with any value.

Multiple Attribute Selector [name=”value”][name2=”value2″]
Matches elements that match all of the specified attribute filters.

1)attributeContainsPrefix selector
Description: Selects elements that have the specified attribute with a value either equal to a given string or starting with that string followed by a hyphen (-).
jQuery( "[attribute|='value']" )
attribute: An attribute name.
value: An attribute value. Can be either a valid identifier or a quoted string.
This selector was introduced into the CSS specification to handle language attributes.
Example:
Finds all links with an hreflang attribute that is english.
	<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>attributeContainsPrefix demo</title>
  <style>
  a {
    display: inline-block;
  }
  </style>
  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
</head>
<body>
 
<a href="example.html" hreflang="en">Some text</a>
<a href="example.html" hreflang="en-UK">Some other text</a>
<a href="example.html" hreflang="english">will not be outlined</a>
 
<script>
$( "a[hreflang|='en']" ).css( "border", "3px dotted green" );
</script>
 
</body>
</html>

2)attributeContains selector
Description: Selects elements that have the specified attribute with a value containing a given substring.
jQuery( "[attribute*='value']" )
jQuery( "[attribute*='value']" )
attribute: An attribute name.
value: An attribute value. Can be either a valid identifier or a quoted string.
This is the most generous of the jQuery attribute selectors that match against a value. It will select an element if the selector's string appears anywhere within the element's attribute value. Compare this selector with the Attribute Contains Word selector (e.g. [attr~="word"]), which is more appropriate in many cases.
Example:
Finds all inputs with a name attribute that contains 'man' and sets the value with some text.

	<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>attributeContains demo</title>
  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
</head>
<body>
 
<input name="man-news">
<input name="milkman">
<input name="letterman2">
<input name="newmilk">
 
<script>
$( "input[name*='man']" ).val( "has man in it!" );
</script>
 
</body>
</html>

3)attributeContainsWord selector
Description: Selects elements that have the specified attribute with a value containing a given word, delimited by spaces.
jQuery( "[attribute~='value']" )
attribute: An attribute name.
value: An attribute value. Can be either a valid identifier or a quoted string.
This selector matches the test string against each word in the attribute value, where a "word" is defined as a string delimited by whitespace. The selector matches if the test string is exactly equal to any of the words.
Example:
Finds all inputs with a name attribute that contains the word 'man' and sets the value with some text.
	<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>attributeContainsWord demo</title>
  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
</head>
<body>
 
<input name="man-news">
<input name="milk man">
<input name="letterman2">
<input name="newmilk">
 
<script>
$( "input[name~='man']" ).val( "mr. man is in it!" );
</script>
 
</body>
</html>

4)attributeEndsWith selector
Description: Selects elements that have the specified attribute with a value ending exactly with a given string. The comparison is case sensitive.
jQuery( "[attribute$='value']" )
attribute: An attribute name.
value: An attribute value. Can be either a valid identifier or a quoted string.
Example:
Finds all inputs with an attribute name that ends with 'letter' and puts text in them.
	<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>attributeEndsWith demo</title>
  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
</head>
<body>
 
<input name="newsletter">
<input name="milkman">
<input name="jobletter">
 
<script>
$( "input[name$='letter']" ).val( "a letter" );
</script>
 
</body>
</html>

5)attributeEquals selector
Description: Selects elements that have the specified attribute with a value exactly equal to a certain value.
jQuery( "[attribute='value']" )
attribute: An attribute name.
value: An attribute value. Can be either a valid identifier or a quoted string.
Example:
Finds all inputs with a value of "Hot Fuzz" and changes the text of the next sibling span.
	<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>attributeEquals demo</title>
  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
</head>
<body>
 
<div>
  <label>
    <input type="radio" name="newsletter" value="Hot Fuzz">
    <span>name?</span>
  </label>
</div>
<div>
  <label>
    <input type="radio" name="newsletter" value="Cold Fusion">
    <span>value?</span>
  </label>
</div>
<div>
  <label>
    <input type="radio" name="newsletter" value="Evil Plans">
    <span>value?</span>
  </label>
</div>
 
<script>
$( "input[value='Hot Fuzz']" ).next().text( "Hot Fuzz" );
</script>
 
</body>
</html>

6)attributeNotEqual selector
Description: Select elements that either don't have the specified attribute, or do have the specified attribute but not with a certain value.
jQuery( "[attribute!='value']" )
attribute: An attribute name.
value: An attribute value. Can be either a valid identifier or a quoted string.
This selector is equivalent to :not([attr='value']).
Additional Notes:
•	Because [name!="value"] is a jQuery extension and not part of the CSS specification, queries using [name!="value"] cannot take advantage of the performance boost provided by the native DOM querySelectorAll() method. For better performance in modern browsers, use $( "your-pure-css-selector" ).not( "[name='value']" ) instead.
Example:
Finds all inputs that don't have the name 'newsletter' and appends text to the span next to it.
	<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>attributeNotEqual demo</title>
  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
</head>
<body>
 
<div>
  <input type="radio" name="newsletter" value="Hot Fuzz">
  <span>name is newsletter</span>
</div>
<div>
  <input type="radio" value="Cold Fusion">
  <span>no name</span>
</div>
<div>
  <input type="radio" name="accept" value="Evil Plans">
  <span>name is accept</span>
</div>
 
<script>
$( "input[name!='newsletter']" ).next().append( "<b>; not newsletter</b>" );
</script>
 
</body>
</html>

7)attributeStartsWith selector
Description: Selects elements that have the specified attribute with a value beginning exactly with a given string.
jQuery( "[attribute^='value']" )
attribute: An attribute name.
value: An attribute value. Can be either a valid identifier or a quoted string.
This selector can be useful for identifying elements in pages produced by server-side frameworks that produce HTML with systematic element IDs. However it will be slower than using a class selector so leverage classes, if you can, to group like elements.
Example:
Finds all inputs with an attribute name that starts with 'news' and puts text in them.
	<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>attributeStartsWith demo</title>
  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
</head>
<body>
 
<input name="newsletter">
<input name="milkman">
<input name="newsboy">
 
<script>
$( "input[name^='news']" ).val( "news here!" );
</script>
 
</body>
</html>

attributeHas selector
Description: Selects elements that have the specified attribute, with any value.
jQuery( "[attribute]" )
attribute: An attribute name.
Example:
Bind a single click to divs with an id that adds the id to the div's text.
	<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>attributeHas demo</title>
  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
</head>
<body>
 
<div>no id</div>
<div id="hey">with id</div>
<div id="there">has an id</div>
<div>nope</div>
 
<script>
// Using .one() so the handler is executed at most once
// per element per event type
$( "div[id]" ).one( "click", function() {
  var idString = $( this ).text() + " = " + $( this ).attr( "id" );
  $( this ).text( idString );
});
</script>
 
</body>
</html>

8)attributeMultiple selector
Description: Matches elements that match all of the specified attribute filters.
jQuery( "[attributeFilter1][attributeFilter2][attributeFilterN]" )
attributeFilter1: An attribute filter.
attributeFilter2: Another attribute filter, reducing the selection even more
attributeFilterN: As many more attribute filters as necessary
Example:
Finds all inputs that have an id attribute and whose name attribute ends with man and sets the value.
	<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>attributeMultiple demo</title>
  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
</head>
<body>
 
<input id="man-news" name="man-news">
<input name="milkman">
<input id="letterman" name="new-letterman">
<input name="newmilk">
 
<script>
$( "input[id][name$='man']" ).val( "only this one" );
</script>
 
</body>
</html>


